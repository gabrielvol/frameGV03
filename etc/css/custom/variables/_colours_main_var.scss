/* =============================================================================
   Colours Main Variables | Custom [variables/colours_main.scss]
   ========================================================================== */
/* // References ------------------------------------------------------------ */
// X, L, D  = extra, light, dark
// De, S, B = desaturated, semi, bright


///**Colours Map Light:** 
    ///Aquí se agregan los colores CLAROS usados en el sitio, de este mapa se creará una clase por cada color, eg.: `.white{color: #fff}`, con el mixin  **colourLightClassesGenerator** `[/etc/scss/mixinsColours.scss]`. Generará las pseudoclases `:active` y `:visited` con el mismo valor. Las pseudoclases `:focus` y `:hover` oscurecerán el color de acuerdo al porcentaje asignado en la variable `$colours_map_light_darkenValue` debajo del mapa.  
$colours_map_light:(    
  //redColour:      #ee0000,
    greenSystem:    #339900,
    greyXXL:        #f4f4f4,
    greyXL:         #dedede,
    greyL:          #c6c6c6,
    grey:           #999,
    
    errorColour:    #eb1c24
);
$colours_map_light_darkenValue: 20%;

///**Colours Map Dark:** 
    ///Aquí se agregan los colores OSCUROS usados en el sitio, de este mapa se creará una clase por cada color, eg.: `.black{color: #000}` con el mixin **colourDarkClassesGenerator** `[/etc/scss/mixinsColours.scss]`. Generará las pseudoclases `:active` y `:visited` con el mismo valor. Las pseudoclases `:focus` y `:hover` aclararán el color con el porcentaje asignado en la variable `$colours_map_dark_lightenValue` debajo del mapa.
$colours_map_dark:(
  //greySD:         #4d4d4d,
    greyD:          #666,
    greyXD:         #333,
    black:          #000
);
$colours_map_dark_lightenValue: 20%;

///**Colours Map Custom Hover:** 
    ///Aquí se agregan los colores cuyas pseudoclases `:focus` y `:hover` no están generadas automáticamente. Se creará una clase por cada color, eg.: `.black{color: #000}` con el mixin **colourCustomHoverClassesGenerator** `[/etc/scss/mixinsColours.scss]`. Generará las pseudoclases `:active` y `:visited` con el mismo valor. Las pseudoclases `:focus` y `:hover` deberán ser indicadas en su correspondiente placeholder en `[/custom/scss/_coloursPlaceholders.scss]`.
$colours_map_custom_hover:(    
    orange: #ff6600
);

$colours_map_merged: map-merge(
    map-merge($colours_map_light, $colours_map_dark),
    $colours_map_custom_hover
);

$errorColour:   map-get($colours_map_merged, errorColour);

$white:         #fff;
$white_hover:   darken($white, 10%);
$white_50:      rgba(255, 255, 255, 0.5);
$white_70:      rgba(255, 255, 255, 0.7);
$white_90:      rgba(255, 255, 255, 0.9);

$black:         map-get($colours_map_merged, black);
$black_50:      rgba(0, 0, 0, 0.5);
$black_70:      rgba(0, 0, 0, 0.7);
$black_90:      rgba(0, 0, 0, 0.9);

//$redColour:     map-get($colours_map_merged, redColour);
$greenSystem:   map-get($colours_map_merged, greenSystem);
$greyXXL:       map-get($colours_map_merged, greyXXL);
$greyXL:        map-get($colours_map_merged, greyXL);
$greyL:         map-get($colours_map_merged, greyL);
$grey:          map-get($colours_map_merged, grey);
$greyD:         map-get($colours_map_merged, greyD);
$greyXD:        map-get($colours_map_merged, greyXD);

///**Anchor Colours Light:** 
    ///Aquí se agregan los colores para las anclas dentro de un párrafo con color CLARO, de este mapa se creará una clase por cada color con el mixin **anchorColoursLightClassesGenerator** `[/etc/scss/coloursMixins.scss]`. Se creara el sig. CSS por cada color, eg.: `.white a{color: #fff}`. Generará las pseudoclases `:active` y `:visited` con el mismo valor. Las pseudoclases `:focus` y `:hover` aclararán el color con el porcentaje asignado en la variable `$anchor_fontColours_map_light_darkenValue` debajo del mapa. 
$anchor_fontColours_map_light:(
    //white: $white,
);
$anchor_fontColours_map_light_darkenValue: 20%;

///**Anchor Colours Dark:** 
    ///Aquí se agregan los colores para las anclas dentro de un párrafo con color OSCURO, de este mapa se creará una clase por cada color con el mixin **anchorColoursDarkClassesGenerator** `[/etc/scss/coloursMixins.scss]`. Se creara el sig. CSS por cada color, eg.: `.black a{color: #000}`. Generará las pseudoclases `:active` y `:visited` con el mismo valor. Las pseudoclases `:focus` y `:hover` oscurecerán el color con el porcentaje asignado en la variable `$anchor_fontColours_map_dark_lightenValue` debajo del mapa.
$anchor_fontColours_map_dark:(
    //black: $black,
);
$anchor_fontColours_map_dark_lightenValue: 20%;